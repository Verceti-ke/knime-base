<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode icon="./bitvector.png" type="Manipulator">
	<name>Bit Vector Generator</name>
	
	<shortDescription>
			    Generates Bit Vectors either from a table containing numerical values, 
			    or from a string column containing the bit positions to set, 
			    hexadecimal or binary strings.
	</shortDescription>
	
	<fullDescription>
		<intro>
		Generates Bit Vectors either from a table containing numerical values, 
		or from a string column containing the bit positions to set, 
		hexadecimal or binary strings.
		<h3>Numeric input (many columns)</h3>
		In the case of a numerical input the columns correspond to the bit positions
		in the resulting Bit Vector, i.e. if only one numerical column is available 
		all Bit Vectors will have length 1.
		All numeric columns in the table are considered. 
		There are two options to determine if the bit is set for the value in 
		the corresponding column or not: 
		<ul>
		<li>either a global threshold is defined, then all values which are above or equal to
		the threshold are converted into set bits, all other bit positions remain 0, or</li>
		<li>a certain percentage of the mean of each column is used as a threshold,
		then all values which are above or equal to the percentage of the mean 
		are converted into set bits.</li>
		</ul>
		
		<h3>Strings (one column)</h3>
		In the case of a string input only the column containing the string is 
		considered for the generation of the bitvectors. The string is parsed 
		and converted into a bitvector. There are three valid input formats 
		which can be parsed and converted:
		<ul>
		<li>Hexadecimal strings: strings consisting only of the characters 0-9 and A - F 
		(where lower- or uppercase is not important). The represented hexadecimal number is 
		converted into a binary number which is represented by the resulting bitvector.</li>
		<li>Binary strings: strings consisting only of 0s and 1s are parsed and 
		converted into the according bitvectors.</li>
		<li>ID strings: strings consisting of numbers (separated by spaces) 
		where the numbers refer to those positions in the bitvector which should be set.
		(Typical input format for association rule mining).</li>
		</ul>
		
		<h3>Missing values</h3>
		For numeric data the incoming missing values will result in 0s.
		For the string input missing values will also result in a missing value 
		in the output table. If a string could not be parsed it will also result in
		a missing cell in the output table.
		
		</intro>
		<option name="Numeric input">
		Select if several numeric columns should be converted into a bitvector.
		</option>
		
		<option name="Threshold">
			If the "numeric input" is checked, specify the global threshold. 
			All values which are above or equal to this threshold will result 
			in a 1 in the bitvector.
		</option>	
		
        <option name="Use percentage of the mean">
            Check, if a percentage of the mean of each column should serve as 
            threshold above which the bits are set.
        </option>
        	
        <option name="Percentage">
            Specify which percentage of the mean a value should have in order to be set.
        </option>				

		<option name="Parse Bit Vectors from string column">
			Check, if the input for the Bit Vectors is a string column that should be converted 
			into a Bit Vector (see description above for valid input formats). 
			Uncheck, if the data is a table with numerical data that should be 
			converted into Bit Vectors. All numerical columns will be considered, 
			all others are irgnored.
		</option>		
		
		<option name="String column to be parsed">
			If the "parse from string column" is checked, select the column
			containing the strings.
		</option>

        <option name="Kind of string representation">
        	Select one of the three valid input formats: HEX (hexadecimal),
        	ID (bit positions) or BIT (binary strings). See description above.
        </option>
                
        <option name="Remove column(s) used for Bit Vector creation:">
        If it is checked the generating column(s) (included columns if numeric input was used
        or the selected string column) are removed.
        If it is unchecked the generated Bit Vectors are appended to the input table.
        </option>
        <option name="Output column">Name of the output column.</option>
	</fullDescription>
	
	<ports>
		<inPort index="0" name="Input data to create Bit Vectors from">Datatable with numerical data or a string column to be parsed.</inPort>
		<outPort index="0" name="Bit vector data">Datatable with the generated Bit Vectors.</outPort>
	</ports>	
	<views>
		<view index="0" name="Statistics View">
			 Provides information about the generation of the Bit Vectors from  
			 the data. In particular this is the number of processed rows, 
			 the total number of generated zeros and ones and the resulting 
			 ratio of 1s to 0s.
		</view>
	</views>
</knimeNode>
