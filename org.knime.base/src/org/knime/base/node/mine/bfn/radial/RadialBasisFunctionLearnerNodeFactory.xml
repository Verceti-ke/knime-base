<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 1.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode type="Learner" icon="./rbf_small.ico">
	<name>PNN Learner (DDA)</name>
	
	<shortDescription>
	    Trains a Probabilistic Neural Network (PNN) on labeled data.
	</shortDescription>
	
	<fullDescription>
		<intro>		
	 		Generates a Probabilistic Neural Network (PNN) based on the DDA 
	 		(Dynamic Decay Adjustment) algorithm on labeled data using
			<a href="http://www.inf.uni-konstanz.de/bioml2/publications/Papers1998/BeDi98_dda_neurocomp.pdf">
			Constructive Training of Probabilistic Neural Networks</a> as the
			underlying algorithm.<br />
			All numeric columns are used as input columns for training and one 
		   	additional column is used as the classification target.
		   	The input port contains the training data and the data output port 
		   	contains the center vectors of the PNN rules.
		   	During the learning process the algorithm uses high-dimensional 
		   	Gaussian functions to cover instances that are adjusted by two 
		   	thresholds, theta minus and theta plus, to avoid conflicts with
		   	rules of different classes.
		</intro>
		
	<option name="Target Column">
		Select the target to be used as the classification attribute.
	</option>
	<option name="Missing Values">
	    Select one method to handle missing values: "Incorp" may generate fuzzy 
	    rules with missing values if no replacement value has been 
	    found during the learning process. "Best Guess" computes the optimal
	    replacement value by projecting the fuzzy rule (with missing value(s))
	    to the missing dimension(s) of all other rules. "Mean", "Min", and "Max"
	    replace the missing value with each column's statistical property. 
	    "Zero" and "One" perform a constant replacement by inserting either zero
	    or one.
	</option>
	<option name="Properties">
	    If this is selected, a shrink should be performed immediately after a 
	    new rule has been introduced, i.e. the new rule is reduced so that 
	    conflicts with all other rules of different classes are avoided.
	</option>
    <option name="Maximum #Epochs">
    	If this is selected, this option defines the maximum number of epochs 
    	the algorithm has to process the entire data set, otherwise it repeats 
    	this process until this rule model is stable, i.e. no new rule has been 
    	commited and/or no shrink has been executed.
	</option>
		<option name="Theta Minus">
			This defines the upper boundary on activation for conflicting rules:
			default value is 0.2. 
		</option>
		<option name="Theta Plus">
			This defines the lower boundary on activation for non-conflicting 
			rules: default value is 0.4.
		</option>
	</fullDescription>
	
	<ports>
		<dataIn index="0" name="Training Data">
			Data used for training. This should contain numeric data and
			one target attribute for classification.
		</dataIn>
		<dataOut index="0" name="PNN Rule Table">
			Table with generated center vectors and one classification attribute.
		</dataOut>
		<modelOut index="0" name="PNN Rule Model" type="PNNModel">
			The generated PNN model can be used for prediction.
		</modelOut>
	</ports>
	
	<views>
		<view index="0" name="PNN Rule Model View">
			Displays a summary of the generated PNN rule model.
		</view>
	</views>
	
</knimeNode>

