<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd">
<knimeNode type="Sink" icon="./db_writer.png">
	<name>Database Writer</name>
	
	<shortDescription>
	    Establishes and opens a database access connection to which the entire
	    input table is written to.
	</shortDescription>
	
	<fullDescription>
		<intro>		
	     Establishes and opens a database access connection to which the entire 
	     input table is written to.
	     <br/>
	     Make sure you have your vendor-specific database driver registered in
         the KNIME preference page (section Database Driver). By default, the 
         sun.jdbc.odbc.JdbcOdbcDriver (Windows and Linux) is only available.
		</intro>

    <tab name="Settings">
	  <option name="Database Driver">
		Enter the database driver here; it is a Java class (including the
		package path), for example: sun.jdbc.odbc.JdbcOdbcDriver
		Additional driver can be registered via KNIME's preference page
        (Database Driver).
	  </option>
	  <option name="Database URL">
        Enter the database name here, for example: 
        jdbc:odbc:database_name or jdbc:mysql://host:port/database_name
	  </option>
	  <option name="Workflow Credentials">
        If checked, the credentials (user and password) are used as defined on 
        the workflow. The credential name links to the specified user and 
        password. Those can be replaced or edit using the 'Workflow Credentials'
        menu available in the workflow context menu.
      </option>
	  <option name="User Name">
        Your log-in user name for the database.
	  </option>
	  <option name="Password">
        Your log-in password for the database. Note, the password is
        de- and encrypted before handling it internally and is not 
        stored inside the settings.
	  </option>
      <option name="TimeZone">
	    Select the TimeZone to convert the date, time or timestamp field into. The current implementation can't 
	    represent time zones. In order to support persisting those fields into a database, the time values can be 
	    changed according to the selected time zone, which is used as the offset (including the daylight saving time)
        for the original values: <i>No Correction (use UTC)</i> is used for workflows (created before 2.8) and does to
        apply any correction, <i>Use local TimeZone</i> uses the local time zone offset to correct the date field 
        before reading or writing, and <i>TimeZone: </i> allows selecting the time zone to covert the date values into.
	  </option>
	  <option name="Table Name">
        Enter the name of the table to which data should be written. Note, if 
        this table exists, the table is dropped before writing.
	  </option>
	  <option name="Append Data">
        Check this to append the input data to an existing table with the same
        data structure. If the table does not exist a new one will be created. 
        <b>Note, if this box is unchecked an existing table is dropped before 
        execution of this node.</b>
      </option>
    </tab>
    <tab name="SQL Types">
	  <option name="Types">
		Enter the SQL types here to write integer-, double-, or string-valued 
		columns to the database. By default integers are defined as type 
		"integer", doubles as "numeric(10,30)", and all other columns, including
		strings are written as "varchar(255)". Some databases such as MS Access
		and Firebird do not allow this numeric precision, therefore you must
		select "numeric" as the SQL type. If your database allows strings 
		longer than 255 chars, you can change this value in order to write 
		long strings such as SLNs or Smiles.
	  </option>
    </tab>
    <tab name="Advanced">
        <option name="Batch Size">
           Enter a number greater than 0 for the number of rows written in one batch job; 1 means on row at a time.
        </option>
    </tab>
	</fullDescription>
	
	<ports>
		<inPort index="0" name="Data to Database">
			Table with data to write into database
		</inPort>
	</ports>	
</knimeNode>