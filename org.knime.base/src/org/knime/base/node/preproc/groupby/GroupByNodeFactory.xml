<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE knimeNode PUBLIC "-//UNIKN//DTD KNIME Node 2.0//EN" "http://www.knime.org/Node.dtd" >
<knimeNode icon="groupBy.png" type="Manipulator">
    <name>GroupBy</name>
    <shortDescription>
    	Groups the table by the selected column(s) and aggregates the remaining
    	columns using the selected aggregation method.
    </shortDescription>
    <fullDescription>
    	<intro>
    	   <p>
    	   Groups the rows of a table by the unique values in the selected columns.
    	    A row is created for each unique value group of the selected column(s). 
    	    The remaining rows are aggregated by the defined method.
            The output table therefore contains one row for each existing value 
            combination of the selected group column(s).
           </p>
           <p>
            To change the aggregation method of more than one column select all
            columns to change, open the context menu with a right mouse click
            and select the aggregation method to use.
           </p>
           <p>
            A detailed description of the available aggregation methods can be
            found on the 'Description' tab in the node dialog.
   		   </p>
            <p>
            If the 'Sort in memory' option is checked the complete table is 
            loaded into the memory to speed up the sorting process.
            </p>
    	</intro>
        <option name="Group settings">
            Select one or more column(s) according to which the group(s) 
            is/are created.
        </option>
        <option name="Aggregation settings">
            Select one or more column(s) for aggregation from the available 
            columns list. Change the aggregation method in the Aggregation 
            column of the table. You can add the same column multiple
            times. In order to change the aggregation method of more than one 
            column select all columns to change, open the context menu with a 
            right mouse click and select the aggregation method to use.
        </option>
        <option name="Maximum unique values per group">
	        Defines the maximum number of unique values per group to avoid 
	        problems with memory overloading. All groups with more unique
	        values are skipped during the calculation and a missing value is set 
            in the corresponding column, and a warning is displayed.
        </option>
        <option name="Enable hiliting">
			If enabled, the hiliting of a group row will hilite all rows of this
			group in other views. Depending of the number of rows, enabling this 
			feature might consume a lot of memory.
        </option>
        <option name="Column naming">
            The name of the resulting aggregation column(s) depends on the 
            selected naming schema. 
        </option>
        <option name="Process in memory">
            Process the table in the memory. Requires more memory but is faster
            since the table needs not to be sorted prior aggregation. 
            The memory consumption depends on the number of unique groups and
            the chosen aggregation method. The row order of the input table is 
            automatically retained.
        </option>
        <option name="Sort in memory">
            Performs necessary sorting in the memory. Speeds up the process
            but consumes much more memory.
        </option>
        <option name="Retain row order">
            Retains the original row order of the input table. 
            Could result in longer execution time. 
        </option>
    </fullDescription>
    <ports>
        <inPort index="0" name="Data table">
	        The input table to group.
        </inPort>
        <outPort index="0" name="Group table">
        	Result table with one row for each existing value combination of 
        	the selected columns.
		</outPort>
    </ports>
</knimeNode>
